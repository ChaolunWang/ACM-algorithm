//this is the implementation of topological sort given a directed acyclic graph
/*
9	number of nodes
12	number of edges
0 2	edges start and end
4 5
2 5
2 3
5 3
5 6
3 6
3 1
3 7
6 8
1 7
7 8
*/

# include <iostream>

using namespace std;



int main()
{
	int n, ne;
	cin>>n>>ne;
	int adj[n*n]={0};
	int a,b;
	int visited[n]={0};
	int timer=0;

	for(int i=0; i<ne; ++i)
	{
		cin>>a>>b;
		adj[a*n+b]=1;
	}

	for(int i=0; i<n; ++i)
	{
		for(int j=0; j<n; ++j)
			cout<<adj[i*n+j]<<' ';
		cout<<'\n';
		
	}




}
